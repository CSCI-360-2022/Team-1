Index: CSCI360TeamProject/src/main/java/com/example/csci360teamproject/GuiController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.csci360teamproject;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport java.time.LocalDate;\n\n@Controller\npublic class GuiController {\n\n    @Autowired\n    private CSCI360TeamProjectService csci360TeamProjectService;\n//    @PostMapping(\"/addUser\")\n//    public @ResponseBody String addNewUser(@RequestParam String username, @RequestParam String password, @RequestParam String email) {\n//        User user = new User(username, password, email);\n//        userRepository.save(user);\n//        return \"Saved\";\n//    }\n\n    @GetMapping(\"/listUsers\")\n    public @ResponseBody Iterable<User> getAllUsers() {\n        return csci360TeamProjectService.listUsers();\n    }\n\n    @GetMapping(\"/hello\")\n    public String helloWorld() {\n        return \"HelloWorld\";\n    }\n\n\n    @GetMapping(\"/displayLoginPage\")\n    public String displayLoginPage() {\n        return \"LoginPage\";\n    }\n    @PostMapping(\"/logIn\")\n    public String logIn(@RequestParam(name=\"username\") String username,\n                        @RequestParam(name=\"password\") String password,\n                        Model model) {\n        model.addAttribute(\"username\", username);\n        model.addAttribute(\"password\", password);\n        return \"index\";\n    }\n\n    @GetMapping(\"/displayRegisterPage\")\n    public String displayRegisterPage() {\n        return \"RegisterPage\";\n    }\n\n    @PostMapping(\"/registerAccount\")\n    public String register(@RequestParam(name = \"email\") String email,\n                           @RequestParam(name = \"username\") String username,\n                           @RequestParam(name = \"password\") String password,\n                           Model model) {\n        User user = new User(username, password, email);\n        csci360TeamProjectService.saveUser(user);\n        model.addAttribute(\"username\", username);\n        model.addAttribute(\"password\", password);\n        return \"index\";\n    }\n    //Used to show AddEvent.html\n    @GetMapping(\"/displayAddEventPage\")\n    public String displayAddEventPage() {\n        return \"AddEvent\";\n    }\n    //Used to add an event to the database\n    //@PostMapping indicates what request we want to map to this addEvent method\n    @PostMapping(\"/addEvent\")\n    //@RequestParam is used to get information from the form and map them to parameter variables\n    public String addEvent(@RequestParam(name = \"eventName\") String eventName,\n                           @RequestParam(name = \"description\") String description, @RequestParam(name = \"price\") double price,\n                           @RequestParam(name = \"seatsLeft\") int seatsLeft, @RequestParam(name = \"tags\") String tags, @RequestParam(name = \"location\") String location, @RequestParam(name = \"date\") String date) {\n        LocalDate dateObj = LocalDate.parse(date);\n        //Standard construction of a java object\n        Event event = new Event(eventName, dateObj, description, price, seatsLeft, tags, location);\n        //Save the new event to the database\n        csci360TeamProjectService.saveEvent(event);\n        //Go back to index.html\n        return \"index\";\n    }\n\n    public boolean confirmLogin(String username, String password) {\n        return false;\n    }\n\n    public String passwordHash(String password) {\n        return \"\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/GuiController.java b/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/GuiController.java
--- a/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/GuiController.java	(revision 07c0a918c5e9a62a002042db02b8340cdf22284f)
+++ b/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/GuiController.java	(date 1667439698570)
@@ -1,6 +1,7 @@
 package com.example.csci360teamproject;
 
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Bean;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -83,8 +84,10 @@
         return "index";
     }
 
+    
     public boolean confirmLogin(String username, String password) {
-        return false;
+        csci360TeamProjectService.findUser(21);
+        return true;
     }
 
     public String passwordHash(String password) {
Index: CSCI360TeamProject/src/test/java/com/example/csci360teamproject/Csci360TeamProjectApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.csci360teamproject;\n\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.time.LocalDate;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\n@SpringBootTest\nclass Csci360TeamProjectApplicationTests {\n    @Test\n    void contextLoads() {\n    }\n\n    @Autowired\n    private CSCI360TeamProjectService csci360TeamProjectService;\n    @Test\n    public void createReceipt() {\n        Receipt receipt = new Receipt();\n        Assertions.assertNotNull(receipt);\n        Assertions.assertEquals(0, receipt.getPaymentTotal(), 0.0);\n        LocalDate now = LocalDate.now();\n        long transactionId = 12309432;\n        Receipt receipt1 = new Receipt(20, 13, 39, now, transactionId, csci360TeamProjectService);\n        Assertions.assertEquals(20, receipt1.getPaymentTotal(), 0.0);\n        Assertions.assertNotEquals(15, receipt1.getPaymentTotal(), 0.0);\n        Assertions.assertEquals(13, receipt1.getEventId());\n        Assertions.assertNotEquals(19, receipt1.getEventId());\n        Assertions.assertEquals(39, receipt1.getCustomerId());\n        Assertions.assertNotEquals(1, receipt1.getCustomerId());\n        Assertions.assertEquals(receipt1.getDate(), now);\n        Assertions.assertNotEquals(receipt1.getDate(), LocalDate.of(2022,11, 1));\n        Assertions.assertEquals(12309432, receipt1.getTransactionId());\n        Assertions.assertNotEquals(12309422, receipt1.getTransactionId());\n    }\n\n    @Test\n    public void setReceiptTest() {\n        LocalDate now = LocalDate.now();\n        long transactionId = 12309432;\n        Receipt receipt1 = new Receipt(20, 13, 39, now, transactionId, csci360TeamProjectService);\n        receipt1.setPaymentTotal(30);\n        receipt1.setEventId(20);\n        receipt1.setCustomerId(19);\n        receipt1.setDate(now.plusMonths(1));\n        receipt1.setTransactionId(3248958);\n        Assertions.assertEquals(30, receipt1.getPaymentTotal(), 0.0);\n        Assertions.assertNotEquals(20, receipt1.getPaymentTotal(), 0.0);\n        Assertions.assertEquals(20, receipt1.getEventId());\n        Assertions.assertNotEquals(13, receipt1.getCustomerId());\n        Assertions.assertEquals(19, receipt1.getCustomerId());\n        Assertions.assertNotEquals(39, receipt1.getCustomerId());\n        Assertions.assertEquals(receipt1.getDate(), now.plusMonths(1));\n        Assertions.assertNotEquals(receipt1.getDate(), now);\n        Assertions.assertEquals(3248958, receipt1.getTransactionId());\n        Assertions.assertNotEquals(12309432, receipt1.getTransactionId());\n    }\n\n    @Test\n    public void buildReceiptTest() throws IOException {\n        Receipt newReceipt = new Receipt(67.23, 13, 21, LocalDate.of(2022, 11, 2), 435673461, csci360TeamProjectService);\n        File file = new File(\"src/test/java/com/example/csci360teamproject/ExampleReceipt.txt\");\n        //Scanner scan = new Scanner(file);\n        String fileText = Files.readString(Paths.get(file.toURI()));\n        Assertions.assertEquals(newReceipt.buildReceipt(), fileText);\n    }\n    //    @Test\n//    public void testPayementTotal() {\n//        Receipt receipt = new Receipt();\n//        assertTrue(receipt.getPaymentTotal() == 0 );\n//    }\n    @Test\n    public void logInTest() {\n        GuiController gui = new GuiController();\n        Assertions.assertTrue(gui.confirmLogin(\"Brooke\", \"helloWorld\"));\n        assertFalse(gui.confirmLogin(\"yeaMan69\", \"aVeryBadPassword\"));\n    }\n\n    @Test\n    public void hashFunctionTest() {\n        //String passwordHash(String password) in GuiController\n        GuiController gui = new GuiController();\n        Assertions.assertEquals(\"2e99758548972a8e8822ad47fa1017ff72f06f3ff6a016851f45c398732bc50c\", gui.passwordHash(\"this is a test\"));\n        Assertions.assertNotEquals(\"\", gui.passwordHash(\"this is a test\"));\n        Assertions.assertNotEquals(\"this is a test\", gui.passwordHash(\"this is a test\"));\n        Assertions.assertEquals(\"b8c8b9cba172641105a24acb50dc08c2af5dba5f077aac3e0508d95b281d269e\", gui.passwordHash(\"reghjrenvkjercgjkggmnjrtwlxfghjkxhvfamxhkbjfl\"));\n        Assertions.assertEquals(\"31535f30b66aefbad771bddc267325e70d9ac33b909924cbd8cacebc3df00e22\", gui.passwordHash(\"t415 I5 A C00l pA55w0rd\"));\n        Assertions.assertEquals(\"d87bfbe8f5dceda0dd34eb872e47bd46eb7adb957f81d029154cb05d65164142\", gui.passwordHash(\"8e5T p@ss0rd 3v3R 0_0\"));\n        Assertions.assertEquals(\"5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8\", gui.passwordHash(\"password\"));\n        Assertions.assertEquals(\"95f82d7b761cd80c7a75ffc9b30a535bad667a3115bd751aa2db2e95ab92214f\", gui.passwordHash(\"testingIsAnImportantPartofAnyCodingProject\"));\n        Assertions.assertEquals(\"35e43dcf32c99b601158de7dae315a8939894ea45d6daa5dd1c31154e77c8805\", gui.passwordHash(\"According to all known laws of aviation, there is no way that a bee should be able to fly. Its wings are too small to get its fat little body off the ground. The bee, of course, flies anyway. Because bees don’t care what humans think is impossible.\"));\n\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CSCI360TeamProject/src/test/java/com/example/csci360teamproject/Csci360TeamProjectApplicationTests.java b/CSCI360TeamProject/src/test/java/com/example/csci360teamproject/Csci360TeamProjectApplicationTests.java
--- a/CSCI360TeamProject/src/test/java/com/example/csci360teamproject/Csci360TeamProjectApplicationTests.java	(revision 07c0a918c5e9a62a002042db02b8340cdf22284f)
+++ b/CSCI360TeamProject/src/test/java/com/example/csci360teamproject/Csci360TeamProjectApplicationTests.java	(date 1667436539368)
@@ -98,6 +98,13 @@
         Assertions.assertEquals("35e43dcf32c99b601158de7dae315a8939894ea45d6daa5dd1c31154e77c8805", gui.passwordHash("According to all known laws of aviation, there is no way that a bee should be able to fly. Its wings are too small to get its fat little body off the ground. The bee, of course, flies anyway. Because bees don’t care what humans think is impossible."));
 
     }
+
+//    @Test
+//    public void createUserTest() {
+//        User user = new User("Bobby", "somePassword", "coolEmail@email.com");
+//        csci360TeamProjectService.saveUser(user);
+//
+//    }
 }
 
 
Index: CSCI360TeamProject/src/main/java/com/example/csci360teamproject/CSCI360TeamProjectServiceImplementation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.csci360teamproject;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class CSCI360TeamProjectServiceImplementation implements CSCI360TeamProjectService {\n    @Autowired\n    private UserRepository userRepository;\n    @Autowired\n    private EventRepository eventRepository;\n\n    @Override\n    public User saveUser(User user) {\n        return userRepository.save(user);\n    }\n\n    @Override\n    public User findUser(int userId) {\n        return userRepository.findById(userId).orElseThrow();\n    }\n\n    @Override\n    public List<User> listUsers() {\n        return (List<User>) userRepository.findAll();\n    }\n\n    @Override\n    public User updateUser(User user, int userId) {\n        User oldUser = userRepository.findById(userId).orElseThrow();\n        if(user.getUsername() != null && !\"\".equalsIgnoreCase(user.getUsername())) {\n            oldUser.setUsername(user.getUsername());\n        }\n        if(user.getPassword() != null && !\"\".equalsIgnoreCase(user.getPassword())) {\n            oldUser.setPassword(user.getPassword());\n        }\n        if(user.getEmail() != null && !\"\".equalsIgnoreCase(user.getEmail())) {\n            oldUser.setUsername(user.getEmail());\n        }\n        return userRepository.save(oldUser);\n    }\n\n    @Override\n    public void deleteUserById(int userId) {\n        userRepository.deleteById(userId);\n    }\n\n    @Override\n    public Event saveEvent(Event event) {\n        return eventRepository.save(event);\n    }\n\n    @Override\n    public Event findEvent(int eventId) {\n        return eventRepository.findById(eventId).orElseThrow();\n    }\n\n    @Override\n    public List<Event> listEvents() {\n        return (List<Event>) eventRepository.findAll();\n    }\n\n    @Override\n    public Event updateEvent(Event event, int eventId) {\n        Event oldEvent = eventRepository.findById(eventId).orElseThrow();\n        if(event.getEventName() != null && !\"\".equalsIgnoreCase(event.getEventName())) {\n            oldEvent.setEventName(event.getEventName());\n        }\n        if(event.getDate() != null) {\n            oldEvent.setDate(event.getDate());\n        }\n        if(event.getPrice() > 0) {\n            oldEvent.setPrice(event.getPrice());\n        }\n        if(event.getDescription() != null && !\"\".equalsIgnoreCase(event.getDescription())) {\n            oldEvent.setDescription(event.getDescription());\n        }\n        if(event.getSeatsLeft() > 0) {\n            oldEvent.setSeatsLeft(event.getSeatsLeft());\n        }\n        if(event.getTags() != null && !\"\".equalsIgnoreCase(event.getTags())) {\n            oldEvent.setTags(event.getTags());\n        }\n        if(event.getLocation() != null && !\"\".equalsIgnoreCase(event.getLocation())) {\n            oldEvent.setLocation(event.getLocation());\n        }\n        return eventRepository.save(oldEvent);\n    }\n\n    @Override\n    public void deleteEventById(int eventId) {\n        eventRepository.deleteById(eventId);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/CSCI360TeamProjectServiceImplementation.java b/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/CSCI360TeamProjectServiceImplementation.java
--- a/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/CSCI360TeamProjectServiceImplementation.java	(revision 07c0a918c5e9a62a002042db02b8340cdf22284f)
+++ b/CSCI360TeamProject/src/main/java/com/example/csci360teamproject/CSCI360TeamProjectServiceImplementation.java	(date 1667434367036)
@@ -93,4 +93,5 @@
     public void deleteEventById(int eventId) {
         eventRepository.deleteById(eventId);
     }
+
 }
